AWSTemplateFormatVersion: '2010-09-09'

Description: A CF template that creates tbd.

Resources:

  # Creates an Application in CodeDeploy.  Applications in CD act as container to ensure correct combo of revision, config, and deployment group is used.
  ApplicationCodeDeployLinux:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: ExampleLinuxApp
      ComputePlatform: Server

  # Deployment Group that is targeted during an ExampleLinuxApp application deployment. Specifies EC2 instances that app revisions are deployed to.
  DeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref ApplicationCodeDeployLinux
      AutoRollbackConfiguration: 
        Enabled: true 
        Events:
          - DEPLOYMENT_FAILURE
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentGroupName: LinuxDeploymentGroup
      Ec2TagFilters:
        - Key: "deployment-target"
          Type: KEY_ONLY
      ServiceRoleArn: !ImportValue RoleCodeDeployArn

  # Role that is assumable by the EventBridge service with permissions to 
  RoleEventBridge:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: 
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument: 
            Version: '2012-10-17'
            Statement: 
              - Action: 
                - 'codepipeline:*'
                Effect: Allow
                Resource: '*'

  EventCodeCommitRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule triggers when there is a change to CodeCommit repo.
      EventPattern: 
        source: 
          - aws.codecommit
        detail-type: 
          - CodeCommit Repository State Change
      Name: CodeCommitEvent
      State: "ENABLED"
      Targets:
        -
          Arn:
            !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}"
          Id: CodePipeline
          RoleArn: !GetAtt RoleEventBridge.Arn

  # Pipeline with two stages: a source stage and a deploy stage.
  # Source Stage: Creates & prepares an artifact from CodeCommit containing deployment files.  Artifact is also then stored in the S3 bucket from infra temp.
  # Deployment Stage: utilizes artifact from Source stage to create a deployment in CodeDeploy targeting an EC2 instance.
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !ImportValue S3CodeDeployBucketName
      Name: codecommit-cfn-pipeline
      RoleArn: !ImportValue RoleCodePipelineArn
      Stages: 
        -
          Name: Source
          Actions: 
            -
              Name: SourceStage
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                BranchName: main
                RepositoryName: !ImportValue RepositoryName
        -
          Name: Deploy
          Actions:  
            -
              Name: DeployStage
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CodeDeploy
              Configuration:
                ApplicationName: ExampleLinuxApp
                DeploymentGroupName: LinuxDeploymentGroup
              Region: us-east-1